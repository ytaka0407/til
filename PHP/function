基本的なfunctionの使い方
function:処理のかたまり。（中身はユーザーが好きに決められる。）
①引数も何もなくただfunctionの処理を行うだけでいい時。
関数定義
function apple(){
echo 'りんごはあかい';
}
↓
呼び出し
apple();
結果
りんごはあかい
②引数を都度指定したい時。
関数定義
function red($fruit){
echo '$fruit'．’ is red.';
}
↓
呼び出し
$redfruit = 'apple';
    red($redfruit);
$redfruit = 'cherry';
    red($redfruit);
結果
apple is red.
cherry is red.
③引数つけて返り値もほしい時（いい例が思いつかない。。)
関数定義
function year($Era){
   $y=$Era-2018;
  return $y;　　　　ここが増える。どの結果を返り値として呼び出し元に返すか設定。演算結果だから変数代入してるけど返り値のある関数直接指定してもいい。（テキストの例）
}
↓
呼び出し
$thisyear=2020;
echo ’西暦’．$thisyear．’年は、令和’．year($thisyear)．’年です。’　　　　この時のyear($thisyear)＝functionから返された$y
結果
西暦2020年は令和2年です。
作りながら思ったけどfor文でくくると元号早見表的なのが作れるな。
あと元号別でfunctionの数式分けてユーザー選択肢で分けたりできそう。
（完全に目的それてる。しかもちょっとしてからそんなものfunctionで分けるほどの処理じゃないことにも気づいた。）
そして軽い気持ちで作ったコードが間違ってて悔しくて直している。。テキスト放って。。


★条件付きユーザー定義関数概要
phpは、参照される前に定義されている必要はありません。
→プログラム中で先に呼び出しだけはするけど、定義はプログラムの一番下に全部まとめて定義とかでもいい。と解釈。上から定義→呼び出しと並んでいなくてもいい。
ただし、条件付きで関数が定義されるような場合を除きます。
→ただ普通に定義するだけのfunctionなら定義が後回しでもOK
定義するのに条件がある場合は先に定義されてないといけない。 （編集済み） 
13:25
①条件付きユーザー定義関数例
if文でTRUEの場合のみ定義。みたいに、普通に進んで定義されない可能性がある場合は、先に定義がされてからでないと呼び出しはできない。
functionA呼び出し
Aの中身定義記述
だけならOK
functionA呼び出し
if（なんか条件）｛
　A定義記述
｝
はダメ。
あと順番合ってても上のパターンでfalseで定義飛ばされてもダメ。
てことは定義と同じレベルの条件下もしくはそれよりも上位の条件下でしかAの呼び出し実行ってできないってことね。これ。 （編集済み） 
13:29
②条件付きのユーザー定義関数例
php公式の例3 ユーザー定義関数が入れ子の場合
functionAの中でfunctionBが定義される場合
A呼び出し実行（実行中にBが初めて定義される）
B呼び出し
A定義記述。その中にB定義記述
は、OK
しかしBが定義されるためにはAの呼び出し実行が条件のため、Bの呼び出しはAを呼び出してからでないとできない。
B呼び出し実行
A呼び出し→A実行→Bを定義
Aの定義内容の記述とその中にBの定義内容の記述
はダメ。
この時、Aは記述するだけで呼び出された時には定義済み扱いになるけど、この記述の中にがBの定義が記述されているだけではBが定義されて使えるようになるわけではない。 
