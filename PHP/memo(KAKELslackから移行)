タイムスタンプ→起点からカウントした秒数
dateファンクション→タイムスタンプ(無指定なら現時刻のタイムスタンプ)を指定のstringフォーマットに変換して出力。逆に意図した時刻を表示したいなら元ネタのタイムスタンプの指定が必要。
strtotimeファンクション→任意の変数や日付をタイムスタンプ形式に変換する。string to timeの略。
任意の時刻を表示させたいなら、dateファンクション内にstrtotimeファンクションを入れ子に。


P102”フォームに記入された内容は、もともと配列に格納される。”
これ、フォームの項目が複数ある場合にそれを一つずつ取り出せるように配列になってるって意味？
フォーム配列[1]=my_name　フォーム配列[2]=gender　フォーム配列[3]＝reserve[]で、更にこの中で複数選択され得るreserveだけは単身で配列だから二次元配列。って意味で合ってるのかな。

値取得の時にhtml側のnameに入った文字列で連想配列。中身はvalue。かな。(基本的に自信がない) 

うん。これで理解はあってるっぽい。
$_REQUEST $_GET $_POST あとまだこれからだけど$_COOKIEも？定義済み配列変数で、キーネームで連想配列として使用する。
00:54
データ格納前に配列のサイズ宣言しなくていいのは楽だな。というかphpってそもそも宣言という概念がないのね。 

takashima-日曜午前  01:07
foreach($_POST['reserve']as $reserve){
　　　print(htmlspecialchars($reserve, ENT_QUOTES).' ');
   }
↓
親の配列$_POST内[’reserve’]の要素になっている、子配列$reserveについて
その中身を順番に全て出力。
とりあえず訳しとく。
あと、要素を二次元配列とするにはhtml側で$親配列のキー[]の[]をつけることで可能。 

is_numeric
変数が数字または数値形式の文字列であるかを調べる。
is_numeric(変数)で調べたい変数を入れるとブール値を返す。

mb_convert_kanaファンクション　半角⇔全角の変換
=mb_convert_kana(①変換したい文字列(必須),　②変換オプションのパラメータ,　③文字エンコーディング)
の順番に指定。
公式マニュアルの読み方にだいぶ慣れてきた。

■html formタグ
入力フォームの親タグ。
action=でphpならsubmit.phpなど、対応するCGIプログラムのURI(書いててもはっきり理解はできてない)を指定。
CGIプログラム＝値を受け取って処理するプログラム。テキスト見ながら書いてるやつ。
method=でPOST・GETの送信方法を指定。
form全体で一つの配列として値を渡す。($_POSTとか$_GET)
■中に入る子要素たち。
INPUTタグ：名前とか入力するフォーム・ラジオボタン・チェックボックス等。
name属性に指定したキーでデータを受け渡し。ユーザーに選択肢から選ばせて値を限定したい場合はvalue属性で指定する。
チェックボックスみたいに複数選択されるものは子要素もチェックボックスの数分の配列で値の受け渡しをする(name=’キー’[]　の形式)。
SELECTタグ：セレクトボックス(プルダウンで選択するやつ)作成。
選択肢はoptionタグで指定する。こちらは値の受け渡しはoptionタグ内でvalue属性に指定されたキー。
こちらはユーザーに見せる選択肢はoptionタグで囲ってタグの外に記述(INPUTとは違う。)
TEXTAREAタグ：感想記入したり、複数行書くことができるフォーム。
rows属性とcols属性でフォームのサイズ指定必須。name属性に指定したキーで値を受け渡し。（INPUTタグと同じ。)
とりあえず値の受け渡し方法整理のためにリファレンスシートの内容ざっくりメモ。 

置き換え系の関数色々あるな。。正規表現もルール把握するのは奥が深そう。。
とりあえず出てきたやつ。
mb_ereg_replace（正規表現パターン,　置換する文字列,　調べたい文字列）
この関数の特徴はマルチバイト文字列を対象にできるところ。notマルチバイト文字列対応のpreg_replaceという関数もあるみたい。
あと若干正規表現パターンの書き方が変わるけど、今そこ深堀りするところではないのでここまで。
※マルチバイト文字列（多分ものすごく簡素な理解。。）パソコン内の単位（サイズ・大きさに近い？？）で、半角英数字が1バイト、を基準にして1バイトじゃ扱えないサイズの文字のこと。全角文字とかその他。
全角文字のメッセージ内を探すのにこの関数を使っている。多分。
テキストでの使い方パターン。
mb_ereg_replace（
正規表現（ざっくり、httpsで始まってなんちゃら～みたいにURLの書き方を定義したやつ）,
置換する文字列（リンク貼りたいから<a href="◯◯">◯◯</a>の表記に読み替える）,
調べたい文字列（投稿メッセージなのでテキストでは$post['message']）
）
の順番に３つ引数指定。


合体演算子について
まず三項演算子とissetを理解している前提。これ２つ組み合わせたものをもっと簡単に書けるよー。っていう構文（シンタックスシュガーという）。
機能・目的は、対象の変数がNULLか判定して、NULL なら変数の中身をこっちの値に変えてねー。NULL じゃなかったらそのままいっちゃってー。
って感じ。
★三項演算子?
判定したい条件式　？　TRUEの処理　：　FALSEの処理
★isset（変数）　（）内の変数に値がセットされているかを調べる。セットされていればTRUE、されていなかったらFALSEで結果を返り値で返す。
気をつけるのが、’’が代入されている場合は空のデータが入っているということでTRUEになる部分。
合体演算子??
上記の、判定したい条件式がisset関数で、TRUEの時変数の値を変えない条件式を簡単にかけるようにした構文。
変数A＝変数A??（変数とか文字列とか値）;
だけで、
$変数A＝isset（変数A）?（変数A）：（変数とか文字列とか値）;
と同じ意味になる。
変数Aに値がセットされているかどうか調べて（判定したい条件式）
セットされているなら（TRUE）変数A＝変数Aで値はそのまま
セットされていなかったら（FALSE）変数Aには他の変数とか文字列とか値を代入。
??だけで、三項演算子のTRUE条件まで全部済ませてくれる。 
