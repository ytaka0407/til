データベースの一覧表示のページ割り振り
条件
urlは常にindex.php
ユーザーにページ番号で選択させる。
表示させるのは5件ずつ。1ページ目なら0-4,2ページ目なら5-9。0スタートなの注意。
■リンクを張る・次のページに飛ぶ流れ
ユーザーに対してはページ指定。なので、今のページ番号（URLパラメータで引き継いだページ番号）の1ページ前（-1）1ページ後（+1）などでリンクをはる。
リンクはる基準の今のページ番号は、一個前のページで選択されてリンクを踏まれ、今いるページのURLパラメータとして引き継がれてきた数字。$_REQUEST[’page]に入っている。
引き継ぎページが無かったら１ページめとする。
★記述方法
リンク先パスは常にindex.php
その後にurlパラメータとして次のページで表示させたいデータの入るページ番号を、？page=番号で指定。
ここに入るのは常に今いるページを指定しているURLパラメータ（引き継がれてきたパラメータ）が基準なので$_REQUEST['page']+1とか、$_REQUEST['page']-1とかになる。
print($_REQUEST['page']　±移動したいページ数);　で、移動先のページを今のページからの相対的な位置を返す数字が出力される。
？page=<?php　print($_REQUEST['page']　±移動したいページ数);　?>
※テキストでは$_REQUEST['page']を一旦ページ番号変数$pageに代入してるので$page±1
↓
↓リンク先にジャンプ
↓
★リンク先に飛ぶと、さっき?page=で指定したurlパラメータを$_REQUEST['page']として自分のページ番号として扱うことになる。
テキストのようにページ番号変数$page　=　$_REQUEST['page']
することで、いちいちurlパラメータ取得する書き方しなくてすむ。
■ページ内で表示するデータを指定する流れ
とんだ先で表示させるデータベースの、LIMITのスタート部分を数式で指定する。
今回表示させる条件は
ページ１：０から
ページ２：５から
ページ３：１０から
なので、
最初に表示するデータ番号を指す数式は　5*（ページ番号-1）
テキストなぞると、
5　*　(ページ番号-1)を、データ表示開始のデータ位置として変数$startに代入している。
表示開始データ指定変数$start　=　5*(ページ番号-1)
$startが計算して出せたところで、LIMIT（開始位置,5）の開始位置の指定にたどり着く。
$memos(そのページで表示したいデータを丸ごと格納する配列)　=　（SELECT *FROM memos ORDER BY id LIMIT　$start　,5)と指定。
(実際はprepareメソッド～executeメソッドで実行していく)
これの無限ループ。 




さて。少々テキストから離れていたので思い出すところから。。
ページングのところ。
//変数$pageには$$_REQUESTのページ（URLパラメータでくっついてきた値）を代入。もし空だったら1ページめとする。
//もしパラメータが何も指定されていなくて$pageが空っぽだったら、$pageには1を入れる。（指定がなければ１ページ目を表示）
$page=$_REQUEST['page'];
if($page==''){
    $page=1;
}
//if文がfalseの場合（つまり$pageに何か値が入っている）場合
//$pageに入っている値と１とで大きい方を$pageに代入し直す。$pageにマイナスを指定された場合はここで１に修正される。
//この判定を経た上で、$pageの数値と1を比較。もし$pageがマイナス指定などされていてもここで1に修正される。
$page=max($page,　1）
//同様に、最終ページより大きな数字を指定された場合も最終ページの数字を$pageに入れ直さなければならないのでこのあと最終ページを取得してminファンクションで比較する。
データ数カウント、カウントした数を$cntに代入
$counts=$db->query('SELECT COUNT(*) AS cnt FROM posts');
$cnt=$counts->fetch();
//最終ページは、データ数を５で割って切り上げた数。$maxpageに代入
$maxpage=ceil($cnt['cnt']/5);
//maxの時と同じで、既に$pageに入っている数値と今計算して切り上げた最終ページ数とで比較。小さい方を採用して$pageに代入し直す。
$page=min($page,$maxpage);
★ここまででこの後表示するページ数が確定。
指定数が１より小さかったら１
指定数がその時の最終ページ数より大きかったら最終ページ数
その間の数字だったらそのまま採用
のルール。 （編集済み） 

takashima-日曜午前  09:59
次は表示するメッセージのID指定
$startは、そのページで表示開始するメッセージのID指定に使う。算出は指定ページの1個前のページ数×5（＝最初に表示するメッセージ）
$start=($page-1)*5;　表示する最初のメッセージID
表示するSQLは、ユーザー指定情報（ページ指定）が入ってるのでprepareメソッドでバインドしてから実行。
$startから数えて5明細だけを表示したいのでLIMIT　$start,5　がつく。
今回バインドしたいのは数値なので、execute...はNG。bindoParamもしくはbindValueを使う。
★bindoParamもしくはbindValue(パラメータID, バインドしたいパラメータが入った変数,　必要ならパラメータに対してデータ型を指定。指定なしだと文字列指定)
$posts=$db->prepare('SELECT m.name,m.picture,p.* FROM members m,posts p WHERE m.id=p.member_id ORDER BY p.created DESC LIMIT ？,5');
$posts->bindparam(1,$start,PDO::PARAM_INT);
$posts->execute();
これで指定したページに表示させるメッセージだけが$postsに格納される。
