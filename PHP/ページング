データベースの一覧表示のページ割り振り
条件
urlは常にindex.php
ユーザーにページ番号で選択させる。
表示させるのは5件ずつ。1ページ目なら0-4,2ページ目なら5-9。0スタートなの注意。
■リンクを張る・次のページに飛ぶ流れ
ユーザーに対してはページ指定。なので、今のページ番号（URLパラメータで引き継いだページ番号）の1ページ前（-1）1ページ後（+1）などでリンクをはる。
リンクはる基準の今のページ番号は、一個前のページで選択されてリンクを踏まれ、今いるページのURLパラメータとして引き継がれてきた数字。$_REQUEST[’page]に入っている。
引き継ぎページが無かったら１ページめとする。
★記述方法
リンク先パスは常にindex.php
その後にurlパラメータとして次のページで表示させたいデータの入るページ番号を、？page=番号で指定。
ここに入るのは常に今いるページを指定しているURLパラメータ（引き継がれてきたパラメータ）が基準なので$_REQUEST['page']+1とか、$_REQUEST['page']-1とかになる。
print($_REQUEST['page']　±移動したいページ数);　で、移動先のページを今のページからの相対的な位置を返す数字が出力される。
？page=<?php　print($_REQUEST['page']　±移動したいページ数);　?>
※テキストでは$_REQUEST['page']を一旦ページ番号変数$pageに代入してるので$page±1
↓
↓リンク先にジャンプ
↓
★リンク先に飛ぶと、さっき?page=で指定したurlパラメータを$_REQUEST['page']として自分のページ番号として扱うことになる。
テキストのようにページ番号変数$page　=　$_REQUEST['page']
することで、いちいちurlパラメータ取得する書き方しなくてすむ。
■ページ内で表示するデータを指定する流れ
とんだ先で表示させるデータベースの、LIMITのスタート部分を数式で指定する。
今回表示させる条件は
ページ１：０から
ページ２：５から
ページ３：１０から
なので、
最初に表示するデータ番号を指す数式は　5*（ページ番号-1）
テキストなぞると、
5　*　(ページ番号-1)を、データ表示開始のデータ位置として変数$startに代入している。
表示開始データ指定変数$start　=　5*(ページ番号-1)
$startが計算して出せたところで、LIMIT（開始位置,5）の開始位置の指定にたどり着く。
$memos(そのページで表示したいデータを丸ごと格納する配列)　=　（SELECT *FROM memos ORDER BY id LIMIT　$start　,5)と指定。
(実際はprepareメソッド～executeメソッドで実行していく)
これの無限ループ。 
